"use strict";(self.webpackChunklcc=self.webpackChunklcc||[]).push([[1024],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return g}});var n=r(7294);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,i=function(t,e){if(null==t)return{};var r,n,i={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var c=n.createContext({}),u=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},p=function(t){var e=u(t.components);return n.createElement(c.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,i=t.mdxType,a=t.originalType,c=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),m=u(r),g=i,f=m["".concat(c,".").concat(g)]||m[g]||s[g]||a;return r?n.createElement(f,o(o({ref:e},p),{},{components:r})):n.createElement(f,o({ref:e},p))}));function g(t,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:i,o[1]=l;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3010:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},assets:function(){return p},toc:function(){return s},default:function(){return g}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={slug:"ioitc-day-1-part-1",title:"IOITC Day-1 Part-1",authors:"trayimurti",tags:["ioitc","ioi","sliding-window-algorithm","day-1","part-1"]},c=void 0,u={permalink:"/lcc/blog/ioitc-day-1-part-1",editUrl:"https://github.com/trayimurti/lcc/blog/2022-01-23-ioitc-day-1-part-1.md",source:"@site/blog/2022-01-23-ioitc-day-1-part-1.md",title:"IOITC Day-1 Part-1",description:"Let us start with a problem",date:"2022-01-23T00:00:00.000Z",formattedDate:"January 23, 2022",tags:[{label:"ioitc",permalink:"/lcc/blog/tags/ioitc"},{label:"ioi",permalink:"/lcc/blog/tags/ioi"},{label:"sliding-window-algorithm",permalink:"/lcc/blog/tags/sliding-window-algorithm"},{label:"day-1",permalink:"/lcc/blog/tags/day-1"},{label:"part-1",permalink:"/lcc/blog/tags/part-1"}],readingTime:2.65,truncated:!0,authors:[{name:"Trayi Murti",title:"IOI Training Camp Participant",url:"https://github.com/trayimurti",imageURL:"https://github.com/trayimurti.png",key:"trayimurti"}],frontMatter:{slug:"ioitc-day-1-part-1",title:"IOITC Day-1 Part-1",authors:"trayimurti",tags:["ioitc","ioi","sliding-window-algorithm","day-1","part-1"]},prevItem:{title:"IOITC Day-1 Part-2",permalink:"/lcc/blog/ioitc-day-1-part-2"},nextItem:{title:"Welcome",permalink:"/lcc/blog/welcome"}},p={authorsImageUrls:[void 0]},s=[{value:"Problem",id:"problem",children:[],level:2}],m={toc:s};function g(t){var e=t.components,r=(0,i.Z)(t,o);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Let us start with a problem"),(0,a.kt)("h2",{id:"problem"},"Problem"),(0,a.kt)("p",null,"Given a list of integers ",(0,a.kt)("strong",{parentName:"p"},"L = ","[A",(0,a.kt)("sub",null,"1"),", A",(0,a.kt)("sub",null,"2"),", A",(0,a.kt)("sub",null,"3"),", \u2026, A",(0,a.kt)("sub",null,"N"),"]"),". Where ",(0,a.kt)("strong",{parentName:"p"},"A",(0,a.kt)("sub",null,"i")," \u2265 0"),", ",(0,a.kt)("strong",{parentName:"p"},"0 \u2264 i \u2264 N"),". You have to find the shortest contiguous segment in the list which adds up to a given integer ",(0,a.kt)("strong",{parentName:"p"},"K"),". If there are more than one such segment, print one of them."))}g.isMDXComponent=!0}}]);
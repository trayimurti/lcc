"use strict";(self.webpackChunklcc=self.webpackChunklcc||[]).push([[3062],{3905:function(e,a,t){t.d(a,{Zo:function(){return o},kt:function(){return h}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function m(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),l=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):m(m({},a),e)),t},o=function(e){var a=l(e.components);return n.createElement(p.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},N=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),N=l(t),h=r,k=N["".concat(p,".").concat(h)]||N[h]||c[h]||s;return t?n.createElement(k,m(m({ref:a},o),{},{components:t})):n.createElement(k,m({ref:a},o))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,m=new Array(s);m[0]=N;var i={};for(var p in a)hasOwnProperty.call(a,p)&&(i[p]=a[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,m[1]=i;for(var l=2;l<s;l++)m[l]=t[l];return n.createElement.apply(null,m)}return n.createElement.apply(null,t)}N.displayName="MDXCreateElement"},7020:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return l},assets:function(){return o},toc:function(){return c},default:function(){return h}});var n=t(7462),r=t(3366),s=(t(7294),t(3905)),m=["components"],i={slug:"ioitc-day-1-part-1",title:"IOITC Day-1 Part-1",authors:"trayimurti",tags:["ioitc","ioi","sliding-window-algorithm","day-1","part-1"]},p=void 0,l={permalink:"/lcc/blog/ioitc-day-1-part-1",editUrl:"https://github.com/trayimurti/lcc/tree/main/blog/2022-01-23-ioitc-day-1-part-1.md",source:"@site/blog/2022-01-23-ioitc-day-1-part-1.md",title:"IOITC Day-1 Part-1",description:"Let us start with a problem",date:"2022-01-23T00:00:00.000Z",formattedDate:"January 23, 2022",tags:[{label:"ioitc",permalink:"/lcc/blog/tags/ioitc"},{label:"ioi",permalink:"/lcc/blog/tags/ioi"},{label:"sliding-window-algorithm",permalink:"/lcc/blog/tags/sliding-window-algorithm"},{label:"day-1",permalink:"/lcc/blog/tags/day-1"},{label:"part-1",permalink:"/lcc/blog/tags/part-1"}],readingTime:2.65,truncated:!0,authors:[{name:"Trayi Murti",title:"IOI Training Camp Participant",url:"https://github.com/trayimurti",imageURL:"https://github.com/trayimurti.png",key:"trayimurti"}],frontMatter:{slug:"ioitc-day-1-part-1",title:"IOITC Day-1 Part-1",authors:"trayimurti",tags:["ioitc","ioi","sliding-window-algorithm","day-1","part-1"]},prevItem:{title:"IOITC Day-1 Part-2",permalink:"/lcc/blog/ioitc-day-1-part-2"},nextItem:{title:"Welcome",permalink:"/lcc/blog/welcome"}},o={authorsImageUrls:[void 0]},c=[{value:"Problem",id:"problem",children:[],level:2},{value:"By Naive Approach",id:"by-naive-approach",children:[{value:"Code",id:"code",children:[],level:3}],level:2},{value:"By Prefix Sum",id:"by-prefix-sum",children:[{value:"Code",id:"code-1",children:[],level:3}],level:2},{value:"By Sliding Window Algorithm",id:"by-sliding-window-algorithm",children:[{value:"Code",id:"code-2",children:[],level:3}],level:2}],N={toc:c};function h(e){var a=e.components,t=(0,r.Z)(e,m);return(0,s.kt)("wrapper",(0,n.Z)({},N,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Let us start with a problem"),(0,s.kt)("h2",{id:"problem"},"Problem"),(0,s.kt)("p",null,"Given a list of integers ",(0,s.kt)("strong",{parentName:"p"},"L = ","[A",(0,s.kt)("sub",null,"1"),", A",(0,s.kt)("sub",null,"2"),", A",(0,s.kt)("sub",null,"3"),", \u2026, A",(0,s.kt)("sub",null,"N"),"]"),". Where ",(0,s.kt)("strong",{parentName:"p"},"A",(0,s.kt)("sub",null,"i")," \u2265 0"),", ",(0,s.kt)("strong",{parentName:"p"},"0 \u2264 i \u2264 N"),". You have to find the shortest contiguous segment in the list which adds up to a given integer ",(0,s.kt)("strong",{parentName:"p"},"K"),". If there are more than one such segment, print one of them."),(0,s.kt)("p",null,"For example,\nIf  ",(0,s.kt)("strong",{parentName:"p"},"L = ","[2, 1, 3, 1, 4, 4, 1, 8, 1, 7]")," and ",(0,s.kt)("strong",{parentName:"p"},"K = 9"),", the answer would be ",(0,s.kt)("strong",{parentName:"p"},"{6, 7}"),"."),(0,s.kt)("h2",{id:"by-naive-approach"},"By Naive Approach"),(0,s.kt)("p",null,"Find every possible segment and sum up elements present in it. This will have ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow",mathvariant:"script"},"O"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup",mathvariant:"script"},"n"),(0,s.kt)("mn",{parentName:"msup",mathvariant:"script"},"2")),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\cal{O}(n^2)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathcal",style:{marginRight:"0.02778em"}},"O")),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,s.kt)("span",{parentName:"span",className:"mclose"},")"))))))," time complexity."),(0,s.kt)("h3",{id:"code"},"Code"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"pair<int,int> naive(vector<int> l, int n, int k){\n    int st,en,len = INF;\n    for(int i=0;i<n;i++){\n        int sum = 0;\n        for(int j=i;j<n;j++){\n            sum += l[j];\n            if(sum == k && j-i+1 < len){\n                len = j-i+1;\n                st = i;\n                en = j;\n                break;\n            }\n            if(sum > k){\n                break;\n            }\n        }\n    }\n    return {st,en};\n}\n")),(0,s.kt)("p",null,"Can we do better?"),(0,s.kt)("h2",{id:"by-prefix-sum"},"By Prefix Sum"),(0,s.kt)("p",null,"Compute the prefix sum of array ",(0,s.kt)("strong",{parentName:"p"},"L")," into another array ",(0,s.kt)("strong",{parentName:"p"},"prefixL"),' (make sure to add an extra element "0" before the list) , for every index ',(0,s.kt)("strong",{parentName:"p"},"i")," in ",(0,s.kt)("strong",{parentName:"p"},"prefixL"),", search if an element exists with value ",(0,s.kt)("strong",{parentName:"p"},"prefixL","[i]"," + K")," and return the indices of the segment with minimum length. We can search for elements with the help of Binary Search, which will take ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow",mathvariant:"script"},"O"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"log"),(0,s.kt)("mo",{parentName:"mrow"},"\u2061"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"script"},"n"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\cal{O}(\\log(n))")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathcal",style:{marginRight:"0.02778em"}},"O")),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mop"},"lo",(0,s.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,s.kt)("span",{parentName:"span",className:"mclose"},"))"))))))," time. So, overall it will have ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow",mathvariant:"script"},"O"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"script"},"n"),(0,s.kt)("mo",{parentName:"mrow"},"\u22c5"),(0,s.kt)("mi",{parentName:"mrow"},"log"),(0,s.kt)("mo",{parentName:"mrow"},"\u2061"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"script"},"n"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\cal{O}(n \\cdot \\log(n))")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathcal",style:{marginRight:"0.02778em"}},"O")),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u22c5"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mop"},"lo",(0,s.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,s.kt)("span",{parentName:"span",className:"mclose"},"))"))))))," time complexity."),(0,s.kt)("h3",{id:"code-1"},"Code"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"pair<int,int> prefixSum(vector<int> l, int n, int k){\n    int st,en,len = INF;\n    vector<int> prefixL(n+1);\n    prefixL[0] = 0;\n    for(int i=0;i<n;i++)\n        prefixL[i+1] = prefixL[i] + l[i];\n    for(int i=0;i<n;i++){\n        int x = lower_bound(prefixL.begin(), prefixL.end(), prefixL[i] + k) - prefixL.begin();\n        if(x <= n && prefixL[x] == prefixL[i] + k && x-i < len){\n            len = x-i;\n            en = x-1;\n            st = i;\n        }\n    }\n    return {st,en};\n}\n")),(0,s.kt)("p",null,"Can we still do better?"),(0,s.kt)("h2",{id:"by-sliding-window-algorithm"},"By Sliding Window Algorithm"),(0,s.kt)("p",null,"As the name suggests, we will use two vectors ",(0,s.kt)("strong",{parentName:"p"},"i")," and ",(0,s.kt)("strong",{parentName:"p"},"j")," to point at starting and ending elements of the segment respectively. If the current sum of the segment is less than ",(0,s.kt)("strong",{parentName:"p"},"K")," then increase the index ",(0,s.kt)("strong",{parentName:"p"},"j")," and include the element in the sum. If the current sum of the segment is greater than K then increase the index ",(0,s.kt)("strong",{parentName:"p"},"i")," and exclude the from the sum. When the current segment sum is equal to ",(0,s.kt)("strong",{parentName:"p"},"K"),", store the indices if the segment length is less than the previous one. As the array is iterated once, So, time complexity will be ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow",mathvariant:"script"},"O"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"script"},"n"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\cal{O}(n)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathcal",style:{marginRight:"0.02778em"}},"O")),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")")))))),". "),(0,s.kt)("h3",{id:"code-2"},"Code"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"pair<int,int> slidingWindow(vector<int> l, int n, int k){\n    int st,en,len = INF;\n    int sum = l[0];\n    for(int i=0,j=0;i<n && j<n;){\n        if(sum < k){\n            j++;\n            if(j < n)   sum += l[j];\n            else        break;\n        }else if(sum > k){\n            sum -= l[i];\n            if(i < j)   i++;\n            else{\n                j++;\n                sum += l[j];\n            }\n        }else{\n            if(j-i+1 < len){\n                st = i;\n                en = j;\n                len = j-i+1;\n            }\n            j++;\n            if(j < n)   sum += l[j];\n            else        break;\n        }\n    }\n    return {st,en};\n}\n")),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Some conditions were added in the code to ensure that ",(0,s.kt)("strong",{parentName:"p"},"i \u2264 j")," and ",(0,s.kt)("strong",{parentName:"p"},"j < n"),"."))),(0,s.kt)("p",null,"What if the numbers can also be negative?"))}h.isMDXComponent=!0}}]);